{"version":3,"sources":["actions.js","api/api.js","constants.js","components/ErrorBoundry.js","components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/MainPage.js","containers/App.js","reducer.js","serviceWorker.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","react_default","a","createElement","children","Component","Header","nextProps","nextState","className","Card","_ref","name","email","username","id","src","concat","alt","CardList","robots","map","user","index","components_Card","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","style","overflowY","border","height","MainPage","filterRobots","_this$props","searchField","filter","robot","toLowerCase","includes","onRequestRobots","_this$props2","onSearchChange","isPending","components_Header","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","App","src_components_MainPage","connect","searchRobots","event","target","value","initialState","initialStateRobots","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","logger","createLogger","rootReducers","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1ec44b24.chunk.js","sourcesContent":["import { apiCall } from './api/api';\r\nimport { \r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({type: REQUEST_ROBOTS_PENDING })\r\n\tapiCall('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}\r\n","export const apiCall = (link) =>\r\n\tfetch(link).then(response => response.json())","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { hasError: false }\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Something went wrong.</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","import React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn false;\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst Card = ({ name, email, id, username }) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${username}?size=200x200`} alt='generated robot' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, index) => (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tid={user.id}\r\n\t\t\t\t\t\temail={user.email}\r\n\t\t\t\t\t\tname={user.name}\r\n\t\t\t\t\t\tusername={user.username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\t\taria-label=\"search robots\"\r\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue \"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search robots\"\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = props => (\r\n\t<div style={{overflowY: 'scroll', border: '1px solid black', height: 500}}>\r\n\t\t{props.children}\r\n\t</div>\r\n);\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nimport ErrorBoundry from './ErrorBoundry';\r\nimport Header from './Header';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\n\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n\tfilterRobots = () => {\r\n\t\tconst { robots, searchField } = this.props;\r\n\t\treturn robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onSearchChange, isPending } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t{ isPending ? <h1>Loading</h1> :\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots={this.filterRobots()} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => { dispatch(setSearchField(event.target.value)) },\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (<MainPage { ...this.props } />);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nconst initialState = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialState, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\trobots: [],\r\n\tisPending :true\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, {isPending: true})\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false})\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, {error: action.payload})\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Global imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport 'tachyons';\r\n\r\n// Local imports\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport {requestRobots, searchRobots} from './reducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst logger = createLogger();\r\nconst rootReducers = combineReducers({requestRobots, searchRobots})\r\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}